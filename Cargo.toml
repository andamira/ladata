[package]
name = "ladata"
description = "data model"
version = "0.0.17"
edition = "2021"
rust-version = "1.59"
authors = ["Jos√© Luis Cruz <joseluis@andamira.net>"]
repository = "https://github.com/andamira/ladata"
documentation = "https://docs.rs/ladata"
license = "MIT/Apache-2.0"
include = [
	"src/**/*.rs",
	"Cargo.toml",
	"LICENSE*",
	"README.md",
]
categories = [ "no-std", "data-structures" ]
keywords = [ "data", "type", "cell" ] # dataframe
publish = false

[dependencies]
paste = "1"

# feature: "deps_continuous" (continuous numbers):
half = { version = "1.8.2", optional = true } # F16 BF16
softposit = { version = "0.3.9", optional = true } # P8, P16, P32, Q8, Q16, Q32
twofloat = { version = "0.4.1", optional = true } # F128

# feature: "deps_discrete" (discrete numbers):
num-rational = { version = "0.4.0", optional = true } # Ratio
num-bigint = { version = "0.4.3", optional = true } # BitInt
rust_decimal = { version = "1.22.0", optional = true } # Decimal

# feature: "deps_string" (strings):
arraystring = { version = "0.3.0", optional = true } # ArrayString*

# feature: "dep_datetime" (date/time):
fugit = { version = "0.3.5", optional = true }
time = { version = "0.3.7", optional = true }

# feature: "dep_bit" (bit arrays):
bv = { version = "0.11.1", optional = true } # BitArray* (impl `Bits`)

[features]
default = [ "std", "deps_default" ]
std = [ ]
deps_all = [
	"deps_numerical",
	"deps_categorical",
]
deps_default = [
	#"deps_numerical",
		"deps_discrete",
		#"deps_continuous",
			"half", "twofloat", # !"softposit"
	#"deps_categorical",
		"deps_bit",
		"deps_string",
		#"deps_datetime",
			"time", # !"fugit",
]

deps_numerical= [ "deps_continuous", "deps_discrete" ]
deps_continuous = [ "half", "softposit", "twofloat" ]
deps_discrete = [ "num-rational", "num-bigint", "rust_decimal" ]

deps_categorical = [ "deps_bit", "deps_datetime", "deps_string" ]
deps_bit = [ "bv" ]
deps_datetime = [ "fugit", "time" ]
deps_string =  [ "arraystring" ]

[dev-dependencies]

[badges]
maintenance = { status = "actively-developed" }
